import math
def main(x, z, y):
 ans = 0
 n = len(x)
 for i in range(1, n + 1):
 ans += 98 * (z[math.ceil(i / 2) - 1] ** 2 + 31 * (
 y[n - math.ceil(i / 4)] ** 3) + 51 * x[
 math.ceil(i / 3) - 1]) ** 5
 return 96 * ans
 
 
 import math
def main(y, z):
 n = len(z)
 s = 0
 for i in range(1, n + 1):
 s += (math.cos(1-47*(z[n-i])-62*((y[i-1])**3)))**5
 return 61*s
 
 from math import ceil
def main(x, z, y):
 n = 5
 su1 = 0
 for i in range(len(x)):
 su1 += 63 * (x[i] ** 2 - 23 * z[n + 1 - ceil(i // 4)] - y[i] ** 3)
 return su1
 
 import math
def main(z, y):
 sum = 0
 for i in range(1, len(z)+1):
 sum = sum + (16*z[len(z)-math.ceil(i/2)]**3-38-58*y[i-1])**4
 return sum
 
 from math import floor, ceil
def main(y, z):
 result = 0
 n = len(z)
 for i in range(1, n+1):
 result += (floor(y[i-1] ** 2 + 1 + 15 * z[ceil(i/4)-1]) ** 4) / 26
 return 77 * result
